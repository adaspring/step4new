name: Extract, Translate and Refine Content

on:
  workflow_dispatch:
    inputs:
      html_file:
        description: 'Path to HTML file'
        required: true
        default: 'index.html'
      lang:
        description: "Primary language"
        required: true
        default: "en"
        type: choice
        options: [en, fr, es, zh, de, pt, it]
      secondary_lang:
        description: "Secondary language"
        required: false
        default: ""
        type: choice
        options: ["", en, fr, es, zh, de, pt, it]
      target_lang:
        description: "Target language"
        required: true
        default: "FR"
        type: choice
        options: [FR, EN, ES, DE, IT, PT, ZH]

env:
  DEEPL_AUTH_KEY: ${{ secrets.DEEPL_AUTH_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  localization_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4 spacy html5lib regex pypinyin langdetect deepl openai
          python -m spacy download en_core_web_sm
          python -m spacy download zh_core_web_sm
          python -m spacy download fr_core_news_sm
          python -m spacy download es_core_news_sm
          python -m spacy download de_core_news_sm
          python -m spacy download it_core_news_sm
          python -m spacy download pt_core_news_sm
          python -m spacy download ru_core_news_sm
          python -m spacy download el_core_news_sm
          python -m spacy download xx_ent_wiki_sm

      - name: Extract translatable content (Step 1)
        run: |
          if [ -z "${{ github.event.inputs.secondary_lang }}" ]; then
            python step1_extract.py "${{ github.event.inputs.html_file }}" \
              --lang "${{ github.event.inputs.lang }}"
          else
            python step1_extract.py "${{ github.event.inputs.html_file }}" \
              --lang "${{ github.event.inputs.lang }}" \
              --secondary-lang "${{ github.event.inputs.secondary_lang }}"
          fi

      - name: Machine translate (Step 2)
        run: |
          if [ -z "${{ github.event.inputs.secondary_lang }}" ]; then
            python step2_translate.py \
              --input translatable_flat.json \
              --output translations.json \
              --segments segments_only.json \
              --lang "${{ github.event.inputs.target_lang }}" \
              --primary-lang "${{ github.event.inputs.lang }}"
          else
            python step2_translate.py \
              --input translatable_flat.json \
              --output translations.json \
              --segments segments_only.json \
              --lang "${{ github.event.inputs.target_lang }}" \
              --primary-lang "${{ github.event.inputs.lang }}" \
              --secondary-lang "${{ github.event.inputs.secondary_lang }}"
          fi

      - name: GPT refinement (Step 3)
        run: |
          python step3_gpt_process.py \
            --context translatable_flat_sentences.json \
            --translated segments_only.json \
            --api-key "$OPENAI_API_KEY" \
            --primary-lang "${{ github.event.inputs.lang }}" \
            --target-lang "${{ github.event.inputs.target_lang }}" \
            $(if [ -n "${{ github.event.inputs.secondary_lang }}" ]; then \
              echo "--secondary-lang ${{ github.event.inputs.secondary_lang }}"; \
            fi)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: localization-results
          path: |
            translatable_flat.json
            translatable_structured.json
            translatable_flat_sentences.json
            non_translatable.html
            translations.json
            segments_only.json
            gpt_input.txt
            gpt_raw_*.txt
            openai_translations_*.json
            gpt_processed.txt
